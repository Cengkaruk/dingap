use strict;

# WARNING: If you want to override the settings in this file, please do so
# in the /etc/amavisd/override.conf file.  This file will be overwritten
# on upgrades!
#
# Options that can be configured via the API (webconfig) as well as 
# options that are tunable by a system administrator are stored in
# /etc/amavisd/api.conf.  Most of the options in this file relate
# to the underlying operating system environment.

## GENERAL

$daemon_user   = 'amavis';
$daemon_group  = 'amavis';
$MYHOME        = "/var/lib/amavis";
$TEMPBASE      = "$MYHOME/tmp";
$helpers_home  = "$MYHOME/var";
$db_home       = "$MYHOME/db";
$pid_file      = "/var/run/amavisd/amavisd.pid";
$lock_file     = "$MYHOME/amavisd.lock";
$max_servers = 4;
$enable_db     = 1;
$enable_global_cache = 1;
$path = '/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/usr/bin:/bin';

## LOGGING AND DEBUGGING

$log_level = 0;
$log_recip_templ = undef;    # disable by-recipient level-0 log entries
$DO_SYSLOG = 1;
$SYSLOG_LEVEL = 'mail.info';

## MTA INTERFACE - INPUT

$inet_socket_port = 10024;   # listen on this local TCP port(s) (see $protocol)
$inet_socket_bind = '127.0.0.1';
$enable_dkim_verification = 0;

## MAIL FORWARDING

$forward_method = 'smtp:[127.0.0.1]:10026';

## QUARANTINE

$QUARANTINEDIR = "/var/lib/amavis/virusmails";
$quarantine_subdir_levels = 1;

## NOTIFICATIONS

$mailfrom_notify_admin     = undef;
$mailfrom_notify_recip     = undef;
$mailfrom_notify_spamadmin = undef;

## MODIFICATIONS TO PASSED MAIL

$insert_received_line = 1;
$remove_existing_x_scanned_headers = 0;
$remove_existing_spam_headers = 0;
$defang_virus  = 1;
$defang_banned = 1;
$undecipherable_subject_tag = '[UNCHECKED]';

## ANTI-VIRUS AND INVALID/FORBIDDEN CONTENTS CONTROLS

@av_scanners = (
  ['ClamAV-clamd',
    \&ask_daemon, ["CONTSCAN {}\n", "/var/lib/clamav/clamd.sock"],
    qr/\bOK$/, qr/\bFOUND$/,
    qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
);

@av_scanners_backup = (
  ['ClamAV-clamscan', 'clamscan',
    "--stdout --no-summary -r --tempdir=$TEMPBASE {}",
    [0], qr/:.*\sFOUND$/, qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
);

## MAIL DECODING

$MAXLEVELS = 14;
$MAXFILES = 1500;
$MIN_EXPANSION_QUOTA =      100*1024;  # bytes  (default undef, not enforced)
$MAX_EXPANSION_QUOTA = 300*1024*1024;  # bytes  (default undef, not enforced)
$MIN_EXPANSION_FACTOR = 5;
$MAX_EXPANSION_FACTOR = 500;

@decoders = (
  ['mail', \&do_mime_decode],
  ['asc',  \&do_ascii],
  ['uue',  \&do_ascii],
  ['hqx',  \&do_ascii],
  ['ync',  \&do_ascii],
  ['F',    \&do_uncompress, ['unfreeze','freeze -d','melt','fcat'] ],
  ['Z',    \&do_uncompress, ['uncompress','gzip -d','zcat'] ],
  ['gz',   \&do_uncompress,  'gzip -d'],
  ['gz',   \&do_gunzip],
  ['bz2',  \&do_uncompress,  'bzip2 -d'],
  ['lzo',  \&do_uncompress,  'lzop -d'],
  ['rpm',  \&do_uncompress, ['rpm2cpio.pl','rpm2cpio'] ],
  ['cpio', \&do_pax_cpio,   ['pax','gcpio','cpio'] ],
  ['tar',  \&do_pax_cpio,   ['pax','gcpio','cpio'] ],
  ['deb',  \&do_ar,          'ar'],
  ['zip',  \&do_unzip],
  ['rar',  \&do_unrar,      ['rar','unrar'] ],
  ['arj',  \&do_unarj,      ['arj','unarj'] ],
  ['arc',  \&do_arc,        ['nomarch','arc'] ],
  ['zoo',  \&do_zoo,         'zoo'],
  ['lha',  \&do_lha,         'lha'],
  ['cab',  \&do_cabextract,  'cabextract'],
  ['tnef', \&do_tnef_ext,    'tnef'],
  ['tnef', \&do_tnef],
  ['exe',  \&do_executable, ['rar','unrar'], 'lha', ['arj','unarj'] ],
);

# REMAINING IMPORTANT VARIABLES ARE LISTED HERE BECAUSE OF LONGER ASSIGNMENTS

@keep_decoded_original_maps = (new_RE(
  qr'^MAIL$', # retain full original message for virus checking
  qr'^MAIL-UNDECIPHERABLE$', # recheck full mail if it contains undecipherables
  qr'^(ASCII(?! cpio)|text|uuencoded|xxencoded|binhex)'i,
));

@virus_name_to_spam_score_maps =
  (new_RE(  # the order matters!
    [ qr'^Phishing\.'                                             => 2.0 ],
    [ qr'^(Email|HTML)\.Phishing\.(?!.*Sanesecurity)'             => 2.0 ],
    [ qr'^Sanesecurity\.(Malware|Rogue|Trojan)\.' => undef ],# keep as infected
    [ qr'^Sanesecurity(\.[^., ]*)*\.'                             => 2.0 ],
    [ qr'^Sanesecurity_PhishBar_'                                 => 2.0 ],
    [ qr'^Email\.Spam\.Bounce(\.[^., ]*)*\.Sanesecurity\.'        => 2.0 ],
    [ qr'^(MSRBL-Images\b|MSRBL-SPAM\.)'                          => 2.0 ],
    [ qr'^VX\.Honeypot-SecuriteInfo\.com\.Joke'                   => 2.0 ],
    [ qr'^VX\.not-virus_(Hoax|Joke)\..*-SecuriteInfo\.com(\.|\z)' => 2.0 ],
    [ qr'^Email\.Spam.*-SecuriteInfo\.com(\.|\z)'                 => 2.0 ],
    [ qr'-SecuriteInfo\.com(\.|\z)'         => undef ],  # keep as infected
    [ qr'^MBL_'                             => undef ],  # keep as infected
  ));

# Settings configured via the API (webconfig)
require('/etc/amavisd/api.conf') if (-e '/etc/amavisd/api.conf');

# Custom settings
require('/etc/amavisd/override.conf') if (-e '/etc/amavisd/override.conf');

1;  # insure a defined return
