#!/usr/webconfig/bin/php
<?php

///////////////////////////////////////////////////////////////////////////////
//
// Copyright 2003-2009 Point Clark Networks.
//
///////////////////////////////////////////////////////////////////////////////
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//
///////////////////////////////////////////////////////////////////////////////

$BASEDIR = isset($_ENV['WEBCONFIG_ROOT']) ? $_ENV['WEBCONFIG_ROOT'] : "/var/webconfig";

// Only LDAP upgrade is required for now.  
// There's nothing to do if LDAP is not installed.
if (! file_exists($BASEDIR . '/api/Ldap.class.php'))
	exit(0);

require_once($BASEDIR . '/api/Ldap.class.php');
require_once($BASEDIR . '/api/ClearDirectory.class.php');
require_once($BASEDIR . '/api/Samba.class.php');

$ldap = new Ldap();
$samba = new Samba();

// Fix "Domain Admins" group attributes (ClearOS 5.1)
//---------------------------------------------------

try {
	$dn = "cn=domain_admins," . ClearDirectory::GetGroupsOu();

	if ($ldap->Exists($dn)) {
		$attributes = array();
		$attributes['sambaSID'] = $samba->GetDomainSid() . '-512';
		$attributes['displayName'] = "Domain Admins";
		$ldap->Modify($dn, $attributes);
	}
} catch (Exception $e) {
	throw new EngineException($e->GetMessage(), COMMON_WARNING);
}

// Fix "winadmin account" (ClearOS 5.1)
//-------------------------------------

try {
	$dn = "cn=Windows Administrator," . ClearDirectory::GetUsersOu();

	if ($ldap->Exists($dn)) {
		$attributes = array();
		$attributes['gidNumber'] = '1000512';
		$attributes['sambaSID'] = $samba->GetDomainSid() . '-500';
		$attributes['displayName'] = "Windows Administrator";
		$ldap->Modify($dn, $attributes);
	}
} catch (Exception $e) {
	throw new EngineException($e->GetMessage(), COMMON_WARNING);
}

// Change default group for machines in the domain to domain_computers
//--------------------------------------------------------------------
	
try {
	$computers = array();
	
	$result = $ldap->Search(
			"(objectclass=posixAccount)",
			ClearDirectory::GetComputersOu()
	);

	$ldap->Sort($result, 'uid');
	$entry = $ldap->GetFirstEntry($result);

	while ($entry) {
		$attributes = array();
		$attributes['gidNumber'] = Samba::CONSTANT_GID_DOMAIN_COMPUTERS;

		$dn = $ldap->GetDn($entry);
		$ldap->Modify($dn, $attributes);

		$entry = $ldap->NextEntry($entry);
	}
} catch (Exception $e) {
	throw new EngineException($e->GetMessage(), COMMON_WARNING);
}

// Force permissions on roaming profiles
//--------------------------------------

try {
	$shareinfo = $samba->GetShareInfo("profiles");

	if (! isset($shareinfo['force group']))
		$samba->_SetShareInfo("profiles", "force group", "domain_users");

	if (! isset($shareinfo['force directory mode']))
		$samba->_SetShareInfo("profiles", "force directory mode", "02775");

	if (! isset($shareinfo['force directory security mode']))
		$samba->_SetShareInfo("profiles", "force directory security mode", "02775");

} catch (SambaShareNotFoundException $e) {
	// Not fatal
} catch (Exception $e) {
	throw new EngineException($e->GetMessage(), COMMON_WARNING);
}

?>
