#!/usr/webconfig/bin/php
<?php

///////////////////////////////////////////////////////////////////////////////
//
// Copyright 2009 Point Clark Networks.
//
///////////////////////////////////////////////////////////////////////////////
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//
///////////////////////////////////////////////////////////////////////////////

$BASEDIR = isset($_ENV['WEBCONFIG_ROOT']) ? $_ENV['WEBCONFIG_ROOT'] : "/var/webconfig";

require_once($BASEDIR . "/common/Logger.class.php");
require_once($BASEDIR . "/api/File.class.php");
require_once($BASEDIR . "/api/PosixUser.class.php");

$min_uid = file_exists("/etc/system/pre5x") ? 500 : 1000;

try {
	$passwd = new File("/etc/passwd");
	$lines = $passwd->GetContentsAsArray();
} catch (Exception $e) {
	LogIt($e->GetMessage());
	exit(1);
}

foreach ($lines as $line) {
	$parts = explode(":", $line);
	// TODO: winadmin was and afterthought.  Handle this in a more generic way
	if (($parts[2] >= $min_uid) && ($parts[2] < 30000) || ($parts[0] == "winadmin")) {
		try {
			LogIt("cleaning up user in /etc/passwd: " . $parts[0]);
			$user = new PosixUser($parts[0]);
			$user->Delete();
		} catch (Exception $e) {
			LogIt($e->GetMessage());
		}
	}
}

function LogIt($logmessage)
{
	Logger::Syslog("clean-passwd", $logmessage);
	echo "$logmessage\n";
}

?>
