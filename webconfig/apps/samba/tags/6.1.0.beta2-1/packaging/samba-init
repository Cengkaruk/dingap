#!/usr/clearos/sandbox/usr/bin/php
<?php

/**
 * ClearOS Samba initializtion.
 *
 * @category   Apps
 * @package    Accounts
 * @subpackage Scripts
 * @author     ClearFoundation <developer@clearfoundation.com>
 * @copyright  2011 ClearFoundation
 * @license    http://www.gnu.org/copyleft/gpl.html GNU General Public License version 3 or later
 * @link       http://www.clearfoundation.com/docs/developer/apps/samba/
 */

///////////////////////////////////////////////////////////////////////////////
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// B O O T S T R A P
///////////////////////////////////////////////////////////////////////////////

$bootstrap = getenv('CLEAROS_BOOTSTRAP') ? getenv('CLEAROS_BOOTSTRAP') : '/usr/clearos/framework/shared';
require_once $bootstrap . '/bootstrap.php';

///////////////////////////////////////////////////////////////////////////////
// D E P E N D E N C I E S
///////////////////////////////////////////////////////////////////////////////

use \clearos\apps\ldap\LDAP_Factory as LDAP_Factory;
use \clearos\apps\mode\Mode_Engine as Mode_Engine;
use \clearos\apps\mode\Mode_Factory as Mode_Factory;
use \clearos\apps\openldap_directory\OpenLDAP as OpenLDAP;
use \clearos\apps\samba\OpenLDAP_Driver as OpenLDAP_Driver;
use \clearos\apps\samba\Samba as Samba;
use \clearos\apps\samba\Winbind as Winbind;

clearos_load_library('ldap/LDAP_Factory');
clearos_load_library('mode/Mode_Engine');
clearos_load_library('mode/Mode_Factory');
clearos_load_library('openldap_directory/OpenLDAP');
clearos_load_library('samba/OpenLDAP_Driver');
clearos_load_library('samba/Samba');
clearos_load_library('samba/Winbind');

///////////////////////////////////////////////////////////////////////////////
// M A I N
///////////////////////////////////////////////////////////////////////////////

//--------------------------------------------------------------------
// Command line options
//--------------------------------------------------------------------

$short_options  = '';
$short_options .= 'f';  // Force

$options = getopt($short_options);

$force = isset($options['f']) ? TRUE : FALSE;

//--------------------------------------------------------------------
// Initialization
//--------------------------------------------------------------------

$sysmode = Mode_Factory::create();
$samba_driver = new OpenLDAP_Driver();

$mode = $sysmode->get_mode();

// Initialize Samba for users/groups
//----------------------------------

if ($mode === Mode_Engine::MODE_MASTER)
    $samba_driver->initialize_master_system('CLEARSYSTEM', NULL, $force);
else if ($mode === Mode_Engine::MODE_STANDALONE)
    $samba_driver->initialize_master_system('CLEARSYSTEM', NULL, $force);

// FIXME
try {
    $samba = new Samba();
    $samba->set_mode(Samba::MODE_PDC);
    $samba->_clean_secrets_file();
} catch (\Exception $e) {
    // Not fatal
}

try {
    $winbind = new Winbind();
    $winbind->set_boot_state(TRUE);
    $winbind->set_running_state(TRUE);
} catch (\Exception $e) {
    // Not fatal
}
